#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    chosen { zmk,matrix-transform = &imprint_function_row_full_bottom_row; };

    macros {
        left_screen: left_screen {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LEFT_CONTROL &kp LEFT>;

            label = "LEFT_SCREEN";
        };

        right_screen: right_screen {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LEFT_CONTROL &kp RIGHT>;

            label = "RIGHT_SCREEN";
        };

        all_screen: all_screen {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LEFT_CONTROL &kp UP_ARROW>;

            label = "ALL_SCREEN";
        };

        prev_cursor_location: last_cursor_location {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LEFT_COMMAND &kp LEFT_BRACKET>;

            label = "LAST_CURSOR_LOCATION";
        };

        next_cursor_locatoin: next_cursor_locatoin {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LEFT_COMMAND &kp RIGHT_BRACKET>;

            label = "NEXT_CURSOR_LOCATOIN";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESC    &kp F1  &kp F2    &kp F3            &kp F4             &kp F5                            &kp F6             &kp F7    &kp F8        &kp F9     &kp F10         &kp F11
&kp EQUAL  &kp N1  &kp N2    &kp N3            &kp N4             &kp N5                            &kp N6             &kp N7    &kp N8        &kp N9     &kp N0          &kp MINUS
&kp TAB    &kp Q   &kp W     &kp E             &kp R              &kp T                             &kp Y              &kp U     &kp I         &kp O      &kp P           &kp BSLH
&kp LCTRL  &kp A   &kp S     &kp D             &kp F              &kp G                             &kp H              &kp J     &kp K         &kp L      &kp SEMI        &kp SQT
&kp LSHFT  &kp Z   &kp X     &kp C             &kp V              &kp B                             &kp COMMA          &kp N     &kp M         &kp DOT    &kp FSLH        &kp RSHFT
&trans     &trans  &kp LGUI  &kp LEFT_BRACKET  &kp RIGHT_BRACKET                                                       &kp LEFT  &kp UP_ARROW  &kp RIGHT  &kp DOWN_ARROW  &trans
                                               &kp RET            &kp LEFT_SHIFT    &kp LEFT_ALT    &kp RIGHT_COMMAND  &kp BSPC  &kp SPACE
                                               &kp LGUI           &kp LEFT_CONTROL  &mkp LCLK       &mkp RCLK          &mo 2     &mo 1
            >;
        };

        Numpad_Nav_Layer {
            bindings = <
&trans  &trans            &trans         &trans                &trans                &trans              &trans          &trans            &trans                &trans                 &trans        &trans
&trans  &trans            &trans         &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans              &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT            &kp C_VOL_UP           &kp C_VOL_DN  &kp C_MUTE
&trans  &kp SINGLE_QUOTE  &kp LESS_THAN  &kp GREATER_THAN      &kp DOUBLE_QUOTES     &kp DOT             &kp AMPERSAND   &kp UNDERSCORE    &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PERCENT   &trans
&trans  &kp EXCL          &kp MINUS      &kp PLUS              &kp KP_EQUAL          &kp HASH            &kp PIPE        &kp COLON         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp QUESTION  &trans
&trans  &kp CARET         &kp KP_DIVIDE  &kp KP_MULTIPLY       &kp BACKSLASH         &trans              &kp TILDE       &kp DOLLAR        &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp AT        &trans
&trans  &trans            &trans         &trans                &trans                                                    &trans            &trans                &trans                 &trans        &trans
                                                               &trans                &trans    &trans    &trans          &trans            &trans
                                                               &trans                &trans    &trans    &trans          &trans            &trans
            >;
        };

        Keyboard_Control_Layer {
            bindings = <
&trans       &trans        &trans          &trans          &trans        &trans                  &trans           &trans           &trans           &trans           &trans           &trans
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3  &bt BT_SEL 4            &trans           &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &trans           &trans           &trans
&sys_reset   &trans        &trans          &kp UP_ARROW    &trans        &trans                  &rgb_ug RGB_TOG  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &sys_reset
&bootloader  &trans        &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT     &trans                  &trans           &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &bootloader
&to 4        &trans        &trans          &trans          &trans        &trans                  &trans           &trans           &trans           &trans           &trans           &to 4
&to 4        &trans        &trans          &trans          &trans                                                 &trans           &trans           &trans           &trans           &to 4
                                                           &trans        &trans        &trans    &trans           &trans           &trans
                                                           &trans        &trans        &trans    &trans           &trans           &trans
            >;
        };

        Auto_Mouse_Layer {
            bindings = <
&trans  &trans  &trans     &trans     &trans     &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &mkp RCLK  &mkp MCLK  &mkp LCLK  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans     &trans                               &trans  &trans  &trans  &trans  &trans
                                      &trans     &trans  &trans    &trans  &trans  &trans
                                      &trans     &trans  &trans    &trans  &trans  &trans
            >;
        };

        factory_test {
            bindings = <
&kp N0  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5            &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &kp N1
&kp N2  &kp N3  &kp N4  &kp N5  &kp N6  &kp N7            &kp N8  &kp N9  &kp N0  &kp N1  &kp N2  &kp N3
&kp N4  &kp N5  &kp N6  &kp N7  &kp N8  &kp N9            &kp N0  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5
&kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &kp N1            &kp N2  &kp N3  &kp N4  &kp N5  &kp N6  &kp N7
&kp N8  &kp N9  &kp N0  &kp N1  &kp N2  &kp N3            &kp N4  &kp N5  &kp N6  &kp N7  &kp N8  &kp N9
&kp N0  &kp N1  &kp N2  &kp N3  &kp N4                            &kp N6  &kp N7  &kp N8  &kp N9  &kp N0
                                &kp N1  &kp N2  &kp N3    &kp N4  &kp N5  &kp N6
                                &kp N7  &kp N8  &kp N9    &kp N0  &kp N1  &kp N2
            >;
        };
    };
};

// right hand trackball configuration
// &trackball_peripheral_listener {
//    input-processors =
//     activate layer 3 within 500ms of the trackball moving
//     <&zip_temp_layer 3 500>;
// };
//left hand trackball configuration

&trackball_central_listener {
    input-processors =
        // multiply sensitivity by 1, divide by 5 (make it slower for scrolling),,,,,,,,,,
        <&zip_xy_scaler 1 32>,
        // make this trackball output scrolling events by default instead of cursor movement,,,,,,,,,,
        <&zip_xy_to_scroll_mapper>,
        // invert vertical scrolling so that the view moves in the same direction as the top of the trackball.,,,,,,,,,,
        <&zip_scroll_transform INPUT_TRANSFORM_Y_INVERT>;
};
